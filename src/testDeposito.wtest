import bicis.*
import accesorios.*
import deposito.*

test "testX" {
	const bici1 = new Bicicleta()
	bici1.rod(28)
	bici1.largo(150)
	bici1.marcas(olmo)
	bici1.contiene(farolito)
	
	const bici2= new Bicicleta()
	
	bici2.rod(26)
	bici2.largo(110)
	bici2.marcas(legnano)
	bici2.contiene(farolito)
	canasto.agregarVol(8)
	morraldebici.agregarLargo(21)
	morraldebici.tieneOjoDeGato()
	bici2.contiene(canasto)
	bici2.contiene(morraldebici)
	
	const bici3= new Bicicleta()
	
	bici3.rod(20)
	bici3.largo(90)
	bici3.marcas(legnano)
	morraldebici.agregarLargo(6)
	morraldebici.noTieneOjoDeGato()
	bici3.contiene(morraldebici)
	
	deposito.agregarBici(bici1)
	deposito.agregarBici(bici2)
	deposito.agregarBici(bici3)
	
	 
	assert.equals([28,26],deposito.bicisRapidas())
	assert.equals(#{legnano,olmo}, deposito.marca()) // Nose si esta bien resulto asi o si hay otra forma mejor
	assert.notThat(deposito.esNocturno())
	assert.that(deposito.puedeLlevarCarga(10))
	assert.notThat(deposito.puedeLlevarCarga(50))
	
	//mas sobre deposito

	
	assert.equals(olmo,deposito.biciMasRapida())
	assert.equals(0,deposito.cargaTotBicisLargas()) // no hay ninguna con mas de 170cm por eso da "0"
	//assert.equals(3,deposito.bicisSinAcc())
}